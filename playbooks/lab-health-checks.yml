- hosts: all
  gather_facts: false
  ignore_unreachable: true
  become: true
  pre_tasks:
    - setup:
        gather_subset: min
        gather_timeout: 10
        filter:
          - ansible_distribution*
          - ansible_hostname

#    - name: Start Dummy Service
#      systemd:
#        state: started
#        name: serviceone
#      when: (ansible_distribution == "RedHat" and ansible_distribution_major_version >= "7")

  tasks:
      - name: Check Available Space in /boot
        shell: df -h /boot/ | awk '{ print $5 }' | grep -Eo '[0-9]{1,4}'
        register: boot_space
        ignore_errors: true
        timeout: 30

      - name: Not Enough Space in /boot for update
        when: boot_space.stdout|int >= 30
        failed_when: boot_space.stdout|int >= 30
        debug: msg="/boot on {{ ansible_hostname }} is over 95% utilized and may fail to update. Open an incident."
        ignore_errors: true
        timeout: 30

      - name: Check Available Space in /var
        shell: df -h /var/ | awk '{ print $5 }' | grep -Eo '[0-9]{1,4}'
        register: var_space
        ignore_errors: true
        timeout: 30

      - name: Not Enough Space in /var for update
        when: var_space.stdout|int >= 10
        failed_when: boot_space.stdout|int >= 10
        debug: msg="/var on {{ ansible_hostname }} is over 95% utilized and may fail to update. Open an incident."
        ignore_errors: true
        timeout: 30


      - name: Check Reboot flag
        shell:
          cmd: grep -E 'TRUE|FALSE|PT' /opt/Tanium/TaniumClient/Tools/CustomTags.txt
        register: autoreboot
        failed_when: false
        ignore_errors: true
        timeout: 60

      - name: Missing Reboot flag
        when: autoreboot.rc == 2
        debug: msg="{{ ansible_hostname }} is missing the CustomTags.txt file. Open incident with the Patch Engineering Team"
        ignore_errors: true
        timeout: 60

      - name: Verify RPMDB
        shell:
          cmd: rpm --verifydb
        register: rpmdb_broken
        ignore_errors: true
        timeout: 120

      - name: Check for any generic yum errors
        shell: yum update --assumeno
        register: yum_generic_error
        failed_when: false
        ignore_errors: true
        timeout: 60

      - name: Generic yum errors found
        when: yum_generic_error.stdout is search("Error")
        debug: msg="There is a yum error that will prevent the update. Open incident with Server Linux Operations"
        ignore_errors: true
        timeout: 60

      - name: Find yumtx files in /tmp
        find:
          paths: /tmp/
          patterns: '*.yumtx'
          age: 1m
          recurse: false
        register: yumtx
        timeout: 60

      - name: Delete yum transaction files from /tmp
        file:
          path: "{{ item.path }}"
          state: absent
        with_items: "{{ yumtx.files }}"
        timeout: 60

      - name: Find user created yum cache in /var/tmp
        find:
          paths: /var/tmp/
          file_type: directory
          patterns: 'yum-*'
          age: 1m
          recurse: false
        register: useryum
        timeout: 60

      - name: Delete user created yum cache in /var/tmp
        file:
          path: "{{ item.path }}"
          state: absent
        with_items: "{{ useryum.files }}"
        ignore_errors: true
        timeout: 60

      - name: Check RHSM Base URL
        shell:
          cmd: grep -i 'subscription.rhsm.redhat.com' /etc/rhsm/rhsm.conf
        register: rhsm_base_url
        ignore_errors: true
        timeout: 60

      - name: Wrong RHSM Base URL
        when: rhsm_base_url.rc == 1
        failed_when: rhsm_base_url.rc == 1
        debug: msg="Wrong satellite server configured for this host. Open INC with Server Linux Operations"
        ignore_errors: true
        timeout: 60

      - name: Check if repos are enabled
        shell:
          cmd: subscription-manager repos --list-enabled
        register: repos_enabled
        timeout: 60
        ignore_errors: true

      - name: No repos enabled
        when: repos_enabled.stdout is search("There were no available repositories matching the specified criteria.")
        failed_when: repos_enabled.stdout is search("There were no available repositories matching the specified criteria.") or repos_enabled.stdout is search("This system has no repositories available through subscriptions.")
        debug: msg="No repos enabled. Open INC with Server Linux Operations"
        ignore_errors: true
        timeout: 60

      - name: See if rpm is working
        command:
          cmd: rpm -qa redhat-release*
        register: rpm_check
        failed_when: rpm_check.stderr is search("Berkeley") or repos_enabled.changed == False or repos_enabled.stderr is search("PANIC") or rpm_check.stderr is search("Cannot allocate memory")
        changed_when: false
        ignore_errors: true
        timeout: 60

      - name: See if repos times out
        command:
          cmd: subscription-manager repos --list-enabled
        register: subscription_manager_repos
        failed_when: subscription_manager_repos.stderr is search("Berkeley")
        changed_when: false
        ignore_errors: true
        timeout: 60

      - name: Rebuild rpmdb if broken
        block:
          - name: Stop TaniumClient (RHEL 6)
            service:
              name: TaniumClient
              state: stopped
            when: (ansible_distribution == "RedHat" and ansible_distribution_major_version == "6")
            timeout: 60

          - name: Stop taniumclient (RHEL 7+)
            service:
              name: taniumclient
              state: stopped
            timeout: 60
            when: (ansible_distribution == "RedHat" and ansible_distribution_major_version >= "7") or

          - name: Stop rhsmcertd
            service:
              name: rhsmcertd
              state: stopped
            timeout: 60

          - name: Attempt to find what is using subscription-manager
            shell:
              cmd: grep "[[:digit:]]*" /var/run/rhsm/cert.pid
            register: sub_man_pid
            ignore_errors: true
            changed_when: false
            timeout: 60

          - name: Attempt to kill what is using
            block:
              - name: Kill what is using subscription-manager
                shell:
                  cmd: kill -9 $(cat /var/run/rhsm/cert.pid)
                register: kill_certpid
                timeout: 60

              - name: Remove /var/run/rhsm/cert.pid if process doesn't exist
                shell:
                  cmd: rm /var/run/rhsm/cert.pid
                when: 'kill_certpid.failed == true and kill_certpid.stderr is search("No such process")'
            when: sub_man_pid.failed == false
            ignore_errors: true

          - name: Rebuild tasks
            block:
              - name: Kill all rpm/yum commands
                shell:
                  cmd: kill -9 $(ps -ef | grep -v grep | grep "rpm\|yum" | awk '{ if($3=1){ print $2 } }')
                ignore_errors: true
                timeout: 60

              - name: Remove /var/lib/rpm/.dbenv.lock
                file:
                  path: /var/lib/rpm/.dbenv.lock
                  state: absent
                timeout: 60

              - name: Remove /var/lib/rpm/.rpm.lock
                file:
                  path: /var/lib/rpm/.rpm.lock
                  state: absent
                timeout: 60

              - name: Back rpmdb files
                shell:
                  cmd: mv /var/lib/rpm/__db* /tmp/.
                timeout: 60

              - name: Rebuild db
                command:
                  cmd: rpm --rebuilddb
                timeout: 120

              - name: Start rhsmcertd
                service:
                  name: rhsmcertd
                  state: started
                timeout: 60

              - name: Verify RPMDB
                shell:
                  cmd: rpm --verifydb
                when: rpmdb_broken.failed == true

              - name: See if rpm is working again
                command:
                  cmd: rpm -qa redhat-release*
                when: rpm_check.failed == true
                changed_when: false
                timeout: 60

              - name: See if repos works
                command:
                  cmd: subscription-manager repos
                register: subscription_manager_repos_retry
                when: subscription_manager_repos.failed == true
                failed_when: subscription_manager_repos_retry.stderr is search("Berkeley")
                changed_when: false
                timeout: 60
            rescue:
              - name: Put rpmdb files back
                shell:
                  cmd: mv /tmp/__db* /var/lib/rpm/
                register: rpmdb_revert
                timeout: 60

              - name: Fail is successfully put back db files
                fail:
                  msg: "Failed to recover db, reverted successfully"
                when: rpmdb_revert.failed == false
                timeout: 60
        always:
          - name: Start TaniumClient (RHEL 6)
            service:
              name: TaniumClient
              state: started
            when: (ansible_distribution == "RedHat" and ansible_distribution_major_version == "6")
            timeout: 60

          - name: Start taniumclient (RHEL 7)
            service:
              name: taniumclient
              state: started
            when: (ansible_distribution == "RedHat" and ansible_distribution_major_version >= "7")
            timeout: 60

          - name: Start rhsmcertd
            service:
              name: rhsmcertd
              state: started
            timeout: 60
        when: rpm_check.failed == true or subscription_manager_repos.failed == true or rpmdb_broken.failed == true
        become: true

      - name: Clean yum cache
        file:
          path: /var/cache/yum
          state: absent
        timeout: 120
        register: clean_chk
        ignore_errors: true

      - name: Refresh subscription-manager
        shell:
          cmd: subscription-manager refresh
        ignore_errors: true
        timeout: 15

